name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install

      - name: Create version bump
        id: version
        run: |
          pnpm changeset version
          if git diff --quiet; then
            echo "No version changes. Skipping PR creation."
            exit 0
          fi

      - name: Commit version changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b changeset-release
          git add .
          git commit -m "chore: version packages"
          git push origin -u changeset-release

      - name: Create Pull Request
        run: |
          gh pr create -B main -H changeset-release -r ${{ github.actor }} \
          -t 'Release: Version Packages' -b 'Automated version bump using Changesets.' \
          -l release -l automated
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # publish:
  #   needs: release
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v4

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v4

  #     - name: Setup Node.js 20.x
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x
  #         cache: "pnpm"

  #     - name: Install Dependencies
  #       run: pnpm install

  #     - name: Publish Packages
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #       run: pnpm changeset publish
